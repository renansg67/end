# pages/monitoramento_acessos.py

import streamlit as st
import pandas as pd
# Removido 'datetime' e 'fetch_all_accesses' se n√£o for mais usada
from database import fetch_access_counts 

# A p√°gina Streamlit √© o c√≥digo direto. N√£o precisamos do wrapper show_access_monitor_page()
# Vamos definir as colunas de layout
col1, col2, col3 = st.columns([1, 5, 1])

# 1. Obter a role do usu√°rio logado 
user_role = st.session_state.get('user_role')

col2.title("üëÅÔ∏è Monitoramento de Acessos")
st.markdown("---")

# 2. Verifica√ß√£o de Permiss√£o
if user_role != "admin":
    col2.error("üîí Acesso Negado. Apenas usu√°rios com a fun√ß√£o **ADMIN** podem visualizar o log de acessos.")
else:
    # --- RENDERIZA√á√ÉO APENAS PARA ADMIN ---
    col2.header("Log de Acessos Agregados por Usu√°rio")

    try:
        # ATEN√á√ÉO: CHAMADA CORRETA PARA A FUN√á√ÉO DE CONTAGEM
        df_acessos = fetch_access_counts() 
        
        # --- DEBUG: Verifique se h√° dados (apenas para Admin) ---
        # Remova esta linha ap√≥s confirmar que funciona
        # col2.write("DEBUG: Dados retornados pela fun√ß√£o fetch_access_counts:")
        # col2.write(df_acessos) 
        # --------------------------------------------------------
        
        if df_acessos.empty:
            col2.info("Nenhum acesso registrado ainda. Fa√ßa um login para iniciar o log.")
        else:
            col2.dataframe(
                df_acessos, 
                width="stretch",
                hide_index=True,
                column_config={
                    "email": "E-mail do Usu√°rio",
                    "role": st.column_config.TextColumn("Fun√ß√£o", help="Fun√ß√£o mais recente do usu√°rio."),
                    # MAPEAMENTO DAS NOVAS COLUNAS
                    "total_acessos": st.column_config.NumberColumn(
                        "Total de Acessos",
                        help="N√∫mero total de logins deste usu√°rio.",
                        format="%d"
                    ),
                    "ultimo_acesso": st.column_config.DatetimeColumn(
                        "√öltimo Acesso",
                        help="Data e hora do login mais recente.",
                        format="DD/MM/YYYY HH:mm:ss"
                    )
                }
            )
    except Exception as e:
        col2.error(f"Erro ao carregar o log de acessos: {e}")
        col2.exception(e)